#!/usr/bin/env python2
PACKAGE = "ow_faults"

from dynamic_reconfigure.parameter_generator_catkin import *

gen = ParameterGenerator()

joint_state_enum = gen.enum([gen.const("nominal",  int_t, 0, "Joint is functioning normally"),
                             gen.const("free",     int_t, 1, "Joint is freely moving"),
                             gen.const("frozen",   int_t, 2, "Joint is frozen in position"),
                             gen.const("friction", int_t, 3, "Joint is consuming extra power")],
                            "An enum to set joint state")
# ANTENNA FAULTS
gen.add("ant_pan_encoder_failure",       bool_t,   0, "Antenna pan encoder failure",       False)
gen.add("ant_pan_effort_failure", bool_t,   0, "Antenna pan effort failure", False)

gen.add("ant_tilt_encoder_failure",       bool_t,   0, "Antenna tilt encoder failure",       False)
gen.add("ant_tilt_effort_failure", bool_t,   0, "Antenna tilt effort failure", False)

# ARM FAULTS
gen.add("shou_yaw_encoder_failure",       bool_t,   0, "Shoulder yaw encoder failure",       False)
gen.add("shou_yaw_effort_failure", bool_t,   0, "Shoulder yaw effort failure", False)

gen.add("shou_pitch_encoder_failure",       bool_t,   0, "Shoulder pitch encoder failure",       False)
gen.add("shou_pitch_effort_failure", bool_t,   0, "Shoulder pitch effort failure", False)

gen.add("prox_pitch_encoder_failure",       bool_t,   0, "Proximal pitch encoder failure",       False)
gen.add("prox_pitch_effort_failure", bool_t,   0, "Proximal pitch effort failure", False)

gen.add("dist_pitch_encoder_failure",       bool_t,   0, "Distal pitch encoder failure",       False)
gen.add("dist_pitch_effort_failure", bool_t,   0, "Distal pitch effort failure", False)

gen.add("hand_yaw_encoder_failure",       bool_t,   0, "Hand yaw encoder failure",       False)
gen.add("hand_yaw_effort_failure", bool_t,   0, "Hand yaw effort failure", False)

gen.add("scoop_yaw_encoder_failure",       bool_t,   0, "Scoop yaw encoder failure",       False)
gen.add("scoop_yaw_effort_failure", bool_t,   0, "Scoop yaw effort failure", False)

# FT Sensor Faults
ft_sensor_faults = gen.add_group("ft_sensor_faults")
ft_sensor_faults.add("enable", bool_t, 0,
    "Distal pitch force torque sensor failures enabled", False)
ft_sensor_faults.add("zero_signal_failure", bool_t, 0,
    "Distal pitch force torque sensor with zero signal failure", False)
ft_sensor_faults.add("signal_bias_failure", double_t, 0,
    "Distal pitch force torque sensor signal bias failure", 0.0, -1.0, 1.0)
ft_sensor_faults.add("signal_noise_failure", double_t, 0,
    "Distal pitch force torque sensor signal increase noise failure", 0.0, 0.0, 1.0)

# POWER FAULTS
power_faults = gen.add_group("power_faults")
power_faults.add("low_state_of_charge_power_failure", bool_t,   0, "Low state of charge power failure", False)
power_faults.add("instantaneous_capacity_loss_power_failure", bool_t,   0, "Instantaneous capcity loss power failure", False)
power_faults.add("thermal_power_failure", bool_t,   0, "Thermal power failure", False)

exit(gen.generate(PACKAGE, "faults", "Faults"))
