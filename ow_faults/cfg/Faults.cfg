#!/usr/bin/env python2
PACKAGE = "ow_faults"

from dynamic_reconfigure.parameter_generator_catkin import *

gen = ParameterGenerator()

joint_state_enum = gen.enum([gen.const("nominal",  int_t, 0, "Joint is functioning normally"),
                             gen.const("free",     int_t, 1, "Joint is freely moving"),
                             gen.const("frozen",   int_t, 2, "Joint is frozen in position"),
                             gen.const("friction", int_t, 3, "Joint is consuming extra power")],
                            "An enum to set joint state")
# ARM FAULTS
gen.add("ant_pan_encoder_failure",       bool_t,   0, "Antenna pan encoder failure",       False)
gen.add("ant_pan_torque_sensor_failure", bool_t,   0, "Antenna pan torque sensor failure", False)

gen.add("ant_tilt_encoder_failure",       bool_t,   0, "Antenna tilt encoder failure",       False)
gen.add("ant_tilt_torque_sensor_failure", bool_t,   0, "Antenna tilt torque sensor failure", False)

gen.add("shou_yaw_encoder_failure",       bool_t,   0, "Shoulder yaw encoder failure",       False)
gen.add("shou_yaw_torque_sensor_failure", bool_t,   0, "Shoulder yaw torque sensor failure", False)

gen.add("shou_pitch_encoder_failure",       bool_t,   0, "Shoulder pitch encoder failure",       False)
gen.add("shou_pitch_torque_sensor_failure", bool_t,   0, "Shoulder pitch torque sensor failure", False)

gen.add("prox_pitch_encoder_failure",       bool_t,   0, "Proximal pitch encoder failure",       False)
gen.add("prox_pitch_torque_sensor_failure", bool_t,   0, "Proximal pitch torque sensor failure", False)

gen.add("dist_pitch_encoder_failure",       bool_t,   0, "Distal pitch encoder failure",       False)
gen.add("dist_pitch_torque_sensor_failure", bool_t,   0, "Distal pitch torque sensor failure", False)

gen.add("hand_yaw_encoder_failure",       bool_t,   0, "Hand yaw encoder failure",       False)
gen.add("hand_yaw_torque_sensor_failure", bool_t,   0, "Hand yaw torque sensor failure", False)

gen.add("scoop_yaw_encoder_failure",       bool_t,   0, "Scoop yaw encoder failure",       False)
gen.add("scoop_yaw_torque_sensor_failure", bool_t,   0, "Scoop yaw torque sensor failure", False)

# POWER FAULTS
gen.add("low_state_of_charge_power_failure", bool_t,   0, "Low state of charge power failure", False)
gen.add("instantaneous_capacity_loss_power_failure", bool_t,   0, "Instantaneous capcity loss power failure", False)
gen.add("thermal_power_failure", bool_t,   0, "Thermal power failure", False)

exit(gen.generate(PACKAGE, "faults", "Faults"))

