#!/usr/bin/env python2
PACKAGE = "ow_faults"

from dynamic_reconfigure.parameter_generator_catkin import *

gen = ParameterGenerator()

joint_state_enum = gen.enum([gen.const("nominal",  int_t, 0, "Joint is functioning normally"),
                             gen.const("free",     int_t, 1, "Joint is freely moving"),
                             gen.const("frozen",   int_t, 2, "Joint is frozen in position"),
                             gen.const("friction", int_t, 3, "Joint is consuming extra power")],
                            "An enum to set joint state")
# Potential new Faults
# gen.add("shou_yaw_position_controller_pid_state_fail", bool_t, 0, "testing shoulder yaw", False)
# gen.add("shou_pitch_position_controller_pid_state_fail", bool_t, 0, "testing shoulder pitch", False)
# gen.add("prox_pitch_position_controller_pid_state_fail", bool_t, 0, "testing prox pitch", False)
# gen.add("dist_pitch_position_controller_pid_state_fail", bool_t, 0, "testing dist pitch", False)
# gen.add("hand_yaw_position_controller_pid_state_fail", bool_t, 0, "testing hand yaw", False)
# gen.add("scoop_yaw_position_controller_pid_state_fail", bool_t, 0, "testing scoop yaw", False)

#gen.add("ant_pan_state",                 int_t,    0, "Antenna pan joint state",           0, 0, 3, edit_method=joint_state_enum)
#gen.add("ant_pan_friction",              double_t, 0, "Antenna pan joint friction",        0.1, 0, 1)
gen.add("ant_pan_encoder_failure",       bool_t,   0, "Antenna pan encoder failure",       False)
gen.add("ant_pan_torque_sensor_failure", bool_t,   0, "Antenna pan torque sensor failure", False)

#gen.add("ant_tilt_state",                 int_t,    0, "Antenna tilt joint state",           0, 0, 3, edit_method=joint_state_enum)
#gen.add("ant_tilt_friction",              double_t, 0, "Antenna tilt joint friction",        0.1, 0, 1)
gen.add("ant_tilt_encoder_failure",       bool_t,   0, "Antenna tilt encoder failure",       False)
gen.add("ant_tilt_torque_sensor_failure", bool_t,   0, "Antenna tilt torque sensor failure", False)

#gen.add("shou_yaw_state",                 int_t,    0, "Shoulder yaw joint state",           0, 0, 3, edit_method=joint_state_enum)
#gen.add("shou_yaw_friction",              double_t, 0, "Shoulder yaw joint friction",        0.1, 0, 1)
gen.add("shou_yaw_encoder_failure",       bool_t,   0, "Shoulder yaw encoder failure",       False)
gen.add("shou_yaw_torque_sensor_failure", bool_t,   0, "Shoulder yaw torque sensor failure", False)

#gen.add("shou_pitch_state",                 int_t,    0, "Shoulder pitch joint state",           0, 0, 3, edit_method=joint_state_enum)
#gen.add("shou_pitch_friction",              double_t, 0, "Shoulder pitch joint friction",        0.1, 0, 1)
gen.add("shou_pitch_encoder_failure",       bool_t,   0, "Shoulder pitch encoder failure",       False)
gen.add("shou_pitch_torque_sensor_failure", bool_t,   0, "Shoulder pitch torque sensor failure", False)

#gen.add("prox_pitch_state",                 int_t,    0, "Proximal pitch joint state",           0, 0, 3, edit_method=joint_state_enum)
#gen.add("prox_pitch_friction",              double_t, 0, "Proximal pitch joint friction",        0.1, 0, 1)
gen.add("prox_pitch_encoder_failure",       bool_t,   0, "Proximal pitch encoder failure",       False)
gen.add("prox_pitch_torque_sensor_failure", bool_t,   0, "Proximal pitch torque sensor failure", False)

#gen.add("dist_pitch_state",                 int_t,    0, "Distal pitch joint state",           0, 0, 3, edit_method=joint_state_enum)
#gen.add("dist_pitch_friction",              double_t, 0, "Distal pitch joint friction",        0.1, 0, 1)
gen.add("dist_pitch_encoder_failure",       bool_t,   0, "Distal pitch encoder failure",       False)
gen.add("dist_pitch_torque_sensor_failure", bool_t,   0, "Distal pitch torque sensor failure", False)

#gen.add("hand_yaw_state",                 int_t,    0, "Hand yaw joint state",           0, 0, 3, edit_method=joint_state_enum)
#gen.add("hand_yaw_friction",              double_t, 0, "Hand yaw joint friction",        0.1, 0, 1)
gen.add("hand_yaw_encoder_failure",       bool_t,   0, "Hand yaw encoder failure",       False)
gen.add("hand_yaw_torque_sensor_failure", bool_t,   0, "Hand yaw torque sensor failure", False)

#gen.add("scoop_yaw_state",                 int_t,    0, "Scoop yaw joint state",           0, 0, 3, edit_method=joint_state_enum)
#gen.add("scoop_yaw_friction",              double_t, 0, "Scoop yaw joint friction",        0.1, 0, 1)
gen.add("scoop_yaw_encoder_failure",       bool_t,   0, "Scoop yaw encoder failure",       False)
gen.add("scoop_yaw_torque_sensor_failure", bool_t,   0, "Scoop yaw torque sensor failure", False)

exit(gen.generate(PACKAGE, "faults", "Faults"))

