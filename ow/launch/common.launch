<?xml version="1.0"?>
<launch>
  
  <arg name="world_name" default="$(find ow_europa)/worlds/terminator.world"/>
  <arg name="arm_sim_enable" default="false" />

  <!-- Initial pose arguments -->
  <arg name="init_x" default="0" />
  <arg name="init_y" default="0" />
  <arg name="init_z" default="0" />
  <arg name="init_R" default="0" />
  <arg name="init_P" default="0" />
  <arg name="init_Y" default="0" />
  <arg name="freeze_base_link" default="false" />

  <!-- == launch gazebo with the chosen world ==================== -->
  <include file="$(find gazebo_ros)/launch/empty_world.launch">
    <arg name="world_name" value="$(arg world_name)"/> 
    <arg name="paused" value="true"/>
    <arg name="use_sim_time" value="true"/>
    <arg name="gui" value="true"/>
    <arg name="headless" value="false"/>
    <arg name="debug" value="false"/>
    <arg name="verbose" value="true"/>
  </include>

  <!-- == publish celestial body frames ==================== -->
  <node name="ephemeris" pkg="irg_planetary_ephemeris" type="publisher" output="screen">
    <rosparam command="load" file="$(find irg_planetary_ephemeris)/config/europa_run_parameters.yaml" />
  </node>

  <!-- == add lander model to scene ==================== -->
  <include file="$(find ow_lander)/launch/spawn.launch" >
    <arg name="init_x" value="$(arg init_x)"/>
    <arg name="init_y" value="$(arg init_y)"/>
    <arg name="init_z" value="$(arg init_z)"/>
    <arg name="init_R" value="$(arg init_R)"/>
    <arg name="init_P" value="$(arg init_P)"/>
    <arg name="init_Y" value="$(arg init_Y)"/>
    <arg name="freeze_base_link" value="$(arg freeze_base_link)"/>
  </include>

  <!-- == add lander to tf-tree for rviz ==================== -->
  <node name="site_to_base_link" pkg="tf" type="static_transform_publisher" args="0 0 0 0 0 0 site base_link 10" />

  <!-- == start rviz ==================== -->
  <group unless="$(arg arm_sim_enable)">
    <node name="rviz" pkg="rviz" type="rviz" args="-d $(find ow_lander)/config/lander.rviz" output="screen"/>
  </group>

</launch>


